--==============================
-- Load the Loading Screen
--==============================
local Players = game:GetService("Players")
local player = Players.LocalPlayer

-- Load the loading screen
pcall(function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/ZuriHubV2/Loading/refs/heads/main/lua_screen"))()
end)

-- Wait a safe amount of time for the loading screen to finish
-- 2-3 seconds is usually enough; adjust if your loading screen takes longer
task.wait(6.5) 

--==============================
-- Load Ash-Libs GUI (Grow A Garden Spawner)
--==============================
local GUI = loadstring(game:HttpGet("https://raw.githubusercontent.com/BloodLetters/Ash-Libs/refs/heads/main/source.lua"))()

-- Create main window
GUI:CreateMain({
    Name = "Grow A Garden Spawner",
    title = "YT: ZuriScripts",
    ToggleUI = "K",
    WindowIcon = "home",
    Theme = {
        Background = Color3.fromRGB(25, 25, 35),
        Secondary = Color3.fromRGB(35, 35, 45),
        Accent = Color3.fromRGB(138, 43, 226),
        Text = Color3.fromRGB(255, 255, 255),
        TextSecondary = Color3.fromRGB(180, 180, 180),
        Border = Color3.fromRGB(50, 50, 60),
        NavBackground = Color3.fromRGB(20, 20, 30)
    },
    Blur = { Enable = false, value = 0.2 },
    Config = { Enabled = false }
})

--==============================
-- Spawner Tab
--==============================
local spawnerTab = GUI:CreateTab("Spawner", "home")
GUI:CreateSection({ parent = spawnerTab, text = "Pet Spawner" })

-- Load Grow A Garden spawner
local Spawner = loadstring(game:HttpGet("https://raw.githubusercontent.com/ZuriHubV2/dump/refs/heads/main/dumplua"))()

-- Default pet values
local petWeight = 1
local petAge = 2

-- Pet Weight & Age Inputs
GUI:CreateInput({
    parent = spawnerTab,
    text = "Pet Weight (KG)",
    placeholder = "Enter weight in KG",
    callback = function(value)
        local num = tonumber(value)
        if num and num > 0 then
            petWeight = num
        else
            GUI:CreateNotify({ title = "Invalid Value", description = "Weight must be a number greater than 0." })
        end
    end
})

GUI:CreateInput({
    parent = spawnerTab,
    text = "Pet Age",
    placeholder = "Enter pet age",
    callback = function(value)
        local num = tonumber(value)
        if num and num > 0 then
            petAge = num
        else
            GUI:CreateNotify({ title = "Invalid Value", description = "Age must be a number greater than 0." })
        end
    end
})

-- Spawn Pets Buttons (deferred for mobile)
task.defer(function()
    local pets = Spawner.GetPets()
    table.sort(pets, function(a, b) return a:lower() < b:lower() end)

    for _, pet in ipairs(pets) do
        GUI:CreateButton({
            parent = spawnerTab,
            text = "Spawn " .. pet,
            callback = function()
                Spawner.SpawnPet(pet, petWeight, petAge)
                GUI:CreateNotify({
                    title = "Pet Spawned",
                    description = pet .. " has been spawned! Weight: " .. petWeight .. " | Age: " .. petAge
                })
            end
        })
    end
end)

--==============================
-- Placeholder Tabs (Egg & Mutation)
--==============================
local placeholderTabs = {
    {name = "Egg Randomizer", icon = "egg"},
    {name = "Mutation Randomizer", icon = "testtube"}
}

for _, tabData in ipairs(placeholderTabs) do
    local tab = GUI:CreateTab(tabData.name, tabData.icon)
    GUI:CreateSection({ parent = tab, text = "Under Maintenance..." })
    GUI:CreateParagraph({
        parent = tab,
        text = "Join Discord for updates",
        alignment = Enum.TextXAlignment.Center
    })
end
