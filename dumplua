-- Load Ash-Libs
local GUI = loadstring(game:HttpGet("https://raw.githubusercontent.com/BloodLetters/Ash-Libs/refs/heads/main/source.lua"))()

-- Create the main window with custom title and subtitle
GUI:CreateMain({
    Name = "Grow A Garden Spawner", -- Main window title
    title = "YT: ZuriScripts",      -- Subtitle text
    ToggleUI = "K",
    WindowIcon = "home",
    Theme = {
        Background = Color3.fromRGB(25, 25, 35),
        Secondary = Color3.fromRGB(35, 35, 45),
        Accent = Color3.fromRGB(138, 43, 226),
        Text = Color3.fromRGB(255, 255, 255),
        TextSecondary = Color3.fromRGB(180, 180, 180),
        Border = Color3.fromRGB(50, 50, 60),
        NavBackground = Color3.fromRGB(20, 20, 30)
    },
    Blur = { Enable = false, value = 0.2 },
    Config = { Enabled = false }
})

--==============================
-- Spawner Tab
--==============================
local spawnerTab = GUI:CreateTab("Spawner", "home")
GUI:CreateSection({ parent = spawnerTab, text = "Pet Spawner" })

-- Load Grow A Garden spawner
local Spawner = loadstring(game:HttpGet("https://gitlab.com/darkdark/dark/-/raw/main/Spawner.lua"))()

-- Default pet values
local petWeight = 1
local petAge = 2

-- Pet Weight & Age Inputs
GUI:CreateInput({
    parent = spawnerTab,
    text = "Pet Weight (KG)",
    placeholder = "Enter weight in KG",
    callback = function(value)
        local num = tonumber(value)
        if num and num > 0 then
            petWeight = num
        else
            GUI:CreateNotify({ title = "Invalid Value", description = "Weight must be a number greater than 0." })
        end
    end
})

GUI:CreateInput({
    parent = spawnerTab,
    text = "Pet Age",
    placeholder = "Enter pet age",
    callback = function(value)
        local num = tonumber(value)
        if num and num > 0 then
            petAge = num
        else
            GUI:CreateNotify({ title = "Invalid Value", description = "Age must be a number greater than 0." })
        end
    end
})

-- Spawn Pets Buttons
local pets = Spawner.GetPets()
table.sort(pets, function(a, b) return a:lower() < b:lower() end)

for _, pet in ipairs(pets) do
    GUI:CreateButton({
        parent = spawnerTab,
        text = "Spawn " .. pet,
        callback = function()
            Spawner.SpawnPet(pet, petWeight, petAge)
            GUI:CreateNotify({
                title = "Pet Spawned",
                description = pet .. " has been spawned! Weight: " .. petWeight .. " | Age: " .. petAge
            })
        end
    })
end

--==============================
-- Placeholder Tabs with Icons
--==============================
local placeholderTabs = {
    {name = "Egg Randomizer", icon = "egg"},
    {name = "Mutation Randomizer", icon = "test-tube"}
}

for _, tabData in ipairs(placeholderTabs) do
    local tab = GUI:CreateTab(tabData.name, tabData.icon)
    -- Main maintenance message
    GUI:CreateSection({
        parent = tab,
        text = "Under Maintenance..."
    })
    -- Centered Discord info
    GUI:CreateParagraph({
        parent = tab,
        text = "Join Discord for updates:\nhttps://discord.gg/3J98QxVB",
        alignment = Enum.TextXAlignment.Center
    })
end
